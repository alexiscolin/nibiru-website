/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useRef, useEffect } from 'react'
import { gsap } from 'gsap'
import * as THREE from 'three'
import { useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['nibi-gem']: THREE.Mesh
    ['axelar-gem']: THREE.Mesh
    ['cosmos-gem']: THREE.Mesh
  }
}
type Props = JSX.IntrinsicElements['group'] & {
  addAnimation: (animation: GSAPTimeline | GSAPTween) => void
}

export default function Rubies(props: Props) {
  const { nodes } = useGLTF(
    '/models/homepage-scene.glb'
  ) as unknown as GLTFResult

  const bakedTexture = useTexture('/models/backing.jpg')

  const nibi = useRef<THREE.Mesh>(null)
  const axelar = useRef<THREE.Mesh>(null)
  const cosmos = useRef<THREE.Mesh>(null)
  const tl = useRef<GSAPTimeline | null>(null)

  useEffect(() => {
    tl.current = gsap.timeline()

    tl.current.to(nibi?.current?.position || null, {
      y: 2.89,
      ease: 'power2.out',
      duration: 1.4,
    })
    tl.current.to(
      nibi?.current?.rotation || null,
      {
        y: -0.65,
        ease: 'power2.out',
        duration: 1.4,
      },
      '<'
    )
    tl.current.to(
      cosmos?.current?.position || null,
      {
        y: 0.27,
        ease: 'power2.out',
        duration: 1.4,
      },
      0.15
    )
    tl.current.to(
      cosmos?.current?.rotation || null,
      {
        y: -0.29,
        ease: 'power2.out',
        duration: 1.4,
      },
      '<'
    )
    tl.current.to(
      axelar?.current?.position || null,
      {
        y: -2.08,
        ease: 'power2.out',
        duration: 1.4,
      },
      0.28
    )
    tl.current.to(
      axelar?.current?.rotation || null,
      {
        y: -0.27,
        ease: 'power2.out',
        duration: 1.4,
      },
      '<'
    )
    props.addAnimation(tl.current)

    return () => {
      tl.current?.progress(0).kill()
    }
  }, [props])

  return (
    <group {...props} dispose={null}>
      <mesh
        ref={nibi}
        geometry={nodes['nibi-gem'].geometry}
        material={nodes['nibi-gem'].material}
        position={[-0.04, -3, -1.91]}
        rotation={[3.14, -4, 3.14]}
        scale={1.6}
      >
        <meshBasicMaterial map={bakedTexture} map-flipY={false} />
      </mesh>
      <mesh
        ref={axelar}
        geometry={nodes['axelar-gem'].geometry}
        material={nodes['axelar-gem'].material}
        position={[-1.51, -9, 2.12]}
        rotation={[-3.14, -4, 0]}
      >
        <meshBasicMaterial map={bakedTexture} map-flipY={false} />
      </mesh>
      <mesh
        ref={cosmos}
        geometry={nodes['cosmos-gem'].geometry}
        material={nodes['cosmos-gem'].material}
        position={[2.26, -7, 0.99]}
        rotation={[-3.14, -4, 0]}
      >
        <meshBasicMaterial map={bakedTexture} map-flipY={false} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/homepage-scene.glb')
